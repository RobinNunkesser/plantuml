@startuml

package "User Interface (Console)" <<Rectangle>> {
    class "Program" as View
}

package "Core Ports (driving)" <<Rectangle>> {

    interface ITask
    {
        ITaskTextGenerator TextGenerator 
        ITaskSolver Solver
        int Score
        string Topic 
        ITaskText Text 
    }

    interface ITaskText
    {
        string Solution 
        string Problem 
        string Form 
    }

    interface IExam
    {
        Boolean Mock 
        string Lecture 
        string Student 
        List<ITask> Tasks 
        string FileName 
    }

    interface "IExamGenerator" as CoreService {
        IStudentRepository studentRepository
        IExamExporter ExamExporter 
        {method} Execute(ExamType type, (Boolean -> void) successHandler,
            (Exception -> void) errorHandler)
    }

    enum ExamType {
        ExamFoo
        ExamBar
    }

}

package "Core" <<Rectangle>> {

    class "ExamGenerator" as CommandHandler {
    }

    class Task {

    }

    class Exam {

    }

}

package "Core Ports (driven)" <<Rectangle>> {        

    interface "IStudentRepository" as InfrastructureInterface
    {
        List<String> Retrieve()
    }

    interface IExamExporter
    {
        void Export(IExam exams);
    }

    interface ITaskTextGenerator 
    {
        ITaskText Generate(ITask task);
    }

    interface ITaskSolver<T>
    {
        T Solve(ITask task)
    }

}

package "Infrastructure Excel \n Adapters" <<Rectangle>> {
        class "EventoImporter" as InfrastructureAdapter {
        }

}

package "Infrastructure Solver" <<Rectangle>> {
    class Solver {
    }
}

package "Infrastructure LaTeX Adapters" <<Rectangle>> {
        class LaTeXExporter {            
        }

        class TaskTextGenerator {

        }

}


InfrastructureAdapter ..|> InfrastructureInterface
View -> CoreService
CommandHandler ..|> CoreService
View ..> CommandHandler : use (injected)
CommandHandler ..> InfrastructureAdapter : use (injected)
CommandHandler ..> LaTeXExporter : use (injected)
IExam -> ITask
CoreService -> IExam
Task ..|> ITask
Exam ..|> IExam
Task ..> Solver : use (injected)
Task ..> TaskTextGenerator : use (injected)
LaTeXExporter ..|> IExamExporter
ITask -> ITaskText
CommandHandler -> Exam
TaskTextGenerator ..|> ITaskTextGenerator
CoreService -> InfrastructureInterface
CoreService -> IExamExporter
CoreService -> ExamType
Exam -> Task
ITask -> ITaskSolver
Solver ..|> ITaskSolver
ITask -> ITaskTextGenerator
@enduml

